# backstage-templates/karectl-research-project/template.yaml
apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: karectl-research-project
  title: Create KARECTL Research Project
  description: Provision a new research project workspace with required services and access controls
  tags:
    - karectl
    - research
    - workspace
spec:
  owner: platform-team
  type: research-project
  parameters:
    - title: Project Information
      required:
        - projectName
        - description
        - principalInvestigator
      properties:
        projectName:
          title: Project Name
          type: string
          pattern: '^[a-z][a-z0-9-]*[a-z0-9]$'
          description: 'Must be lowercase, alphanumeric, and hyphens only'
        description:
          title: Project Description
          type: string
          ui:widget: textarea
          ui:options:
            rows: 3
        principalInvestigator:
          title: Principal Investigator
          type: string
          ui:field: EntityPicker
          ui:options:
            allowedKinds:
              - User
        researchDomain:
          title: Research Domain
          type: string
          enum:
            - biomedical
            - social-science
            - environmental
            - physics
            - computer-science
            - interdisciplinary
        ethicsApprovalNumber:
          title: Ethics Approval Number
          type: string
          description: Required for projects handling sensitive data
        
    - title: Data Classification & Compliance
      required:
        - dataClassification
        - complianceFrameworks
      properties:
        dataClassification:
          title: Data Classification Level
          type: string
          enum:
            - public
            - internal
            - confidential
            - restricted
          enumNames:
            - 'Public (No restrictions)'
            - 'Internal (University only)'
            - 'Confidential (Authorized personnel)'
            - 'Restricted (Highest security)'
        complianceFrameworks:
          title: Compliance Requirements
          type: array
          items:
            type: string
            enum:
              - gdpr
              - hipaa
              - ferpa
              - iso27001
              - nhs-dspt
          ui:widget: checkboxes
        dataRetentionPeriod:
          title: Data Retention Period (years)
          type: integer
          minimum: 1
          maximum: 50
          default: 7
        
    - title: Team Members
      properties:
        researchers:
          title: Researchers
          type: array
          items:
            type: object
            properties:
              username:
                type: string
                title: Username/Email
              role:
                type: string
                enum:
                  - researcher
                  - analyst
                  - student
                  - collaborator
                title: Role
              accessLevel:
                type: string
                enum:
                  - read-only
                  - read-write
                  - admin
                title: Access Level
          ui:options:
            addButtonText: Add Researcher
        
    - title: Required Services
      properties:
        computeServices:
          title: Compute Services
          type: array
          items:
            type: string
            enum:
              - jupyterhub
              - rstudio-server
              - vscode-server
              - kubevirt-vms
              - spark-cluster
              - dask-cluster
          ui:widget: checkboxes
          default:
            - jupyterhub
        dataServices:
          title: Data Services
          type: array
          items:
            type: string
            enum:
              - postgresql
              - mongodb
              - minio-storage
              - nfs-storage
              - redis-cache
          ui:widget: checkboxes
        developmentServices:
          title: Development Services
          type: array
          items:
            type: string
            enum:
              - gitea
              - gitlab-runner
              - docker-registry
              - artifact-registry
          ui:widget: checkboxes
        mlServices:
          title: ML/Analytics Services  
          type: array
          items:
            type: string
            enum:
              - mlflow
              - kubeflow
              - tensorboard
              - airflow
              - prefect
          ui:widget: checkboxes
            
    - title: Resource Requirements
      properties:
        resourceTier:
          title: Resource Tier
          type: string
          enum:
            - small
            - medium
            - large
            - xlarge
          enumNames:
            - 'Small (4 vCPU, 16GB RAM)'
            - 'Medium (8 vCPU, 32GB RAM)'
            - 'Large (16 vCPU, 64GB RAM)'  
            - 'X-Large (32 vCPU, 128GB RAM)'
          default: medium
        storageRequirements:
          title: Storage Requirements
          type: object
          properties:
            homeStorage:
              title: Home Directory Storage (GB)
              type: integer
              minimum: 10
              maximum: 1000
              default: 100
            dataStorage:
              title: Data Storage (GB)
              type: integer
              minimum: 100
              maximum: 10000
              default: 500
            scratchStorage:
              title: Scratch Storage (GB)
              type: integer
              minimum: 50
              maximum: 5000
              default: 200
        
    - title: Network Access Control
      properties:
        allowedExternalSites:
          title: Allowed External Sites
          type: array
          items:
            type: object
            properties:
              domain:
                type: string
                title: Domain/URL
                description: 'e.g., github.com, arxiv.org, *.nature.com'
              ports:
                type: array
                items:
                  type: integer
                title: Allowed Ports
                default: [80, 443]
              justification:
                type: string
                title: Justification
                description: Why this site is needed for research
          ui:options:
            addButtonText: Add External Site
        networkIsolation:
          title: Network Isolation Level
          type: string
          enum:
            - standard
            - strict
            - air-gapped
          enumNames:
            - 'Standard (Common research sites allowed)'
            - 'Strict (Only specified sites)'
            - 'Air-gapped (No external access)'
          default: standard
          
    - title: Duration & Approval
      required:
        - projectDuration
        - approvalRequired
      properties:
        projectDuration:
          title: Project Duration (months)
          type: integer
          minimum: 1
          maximum: 60
          default: 12
        autoRenewal:
          title: Enable Auto-renewal
          type: boolean
          default: false
        approvalRequired:
          title: This project requires approval
          type: boolean
          default: true
          ui:readonly: true
        justification:
          title: Project Justification
          type: string
          ui:widget: textarea
          ui:options:
            rows: 4
          description: Provide justification for resource requirements and external access needs

  steps:
    - id: createProjectCrd
      name: Create Project CRD
      action: roadiehq:utils:fs:write
      input:
        path: projects/${{ parameters.projectName | lower }}/project.yaml
        content: |
          apiVersion: karectl.io/v1alpha1
          kind: ResearchProject
          metadata:
            name: ${{ parameters.projectName | lower }}
            namespace: karectl-system
            annotations:
              karectl.io/created-by: ${{ user.entity.metadata.name }}
              karectl.io/created-at: ${{ '' | now }}
              karectl.io/backstage-entity: ${{ user.entity.metadata.name }}
          spec:
            project:
              name: ${{ parameters.projectName }}
              description: ${{ parameters.description }}
              principalInvestigator: ${{ parameters.principalInvestigator }}
              researchDomain: ${{ parameters.researchDomain }}
              ethicsApprovalNumber: ${{ parameters.ethicsApprovalNumber }}
              
            compliance:
              dataClassification: ${{ parameters.dataClassification }}
              frameworks: 
                {% for framework in parameters.complianceFrameworks %}
                - {{ framework }}
                {% endfor %}
              dataRetentionPeriod: ${{ parameters.dataRetentionPeriod }}
              
            duration:
              months: ${{ parameters.projectDuration }}
              autoRenewal: ${{ parameters.autoRenewal }}
              
            resources:
              tier: ${{ parameters.resourceTier }}
              storage:
                home: ${{ parameters.storageRequirements.homeStorage }}Gi
                data: ${{ parameters.storageRequirements.dataStorage }}Gi
                scratch: ${{ parameters.storageRequirements.scratchStorage }}Gi
                
            network:
              isolation: ${{ parameters.networkIsolation }}
              allowedSites:
                {% for site in parameters.allowedExternalSites %}
                - domain: {{ site.domain }}
                  ports: {{ site.ports | dump }}
                  justification: {{ site.justification }}
                {% endfor %}
                
            services:
              compute:
                {% for service in parameters.computeServices %}
                - {{ service }}
                {% endfor %}
              data:
                {% for service in parameters.dataServices %}
                - {{ service }}
                {% endfor %}
              development:
                {% for service in parameters.developmentServices %}
                - {{ service }}
                {% endfor %}
              ml:
                {% for service in parameters.mlServices %}
                - {{ service }}
                {% endfor %}

    - id: createResearchersCrd
      name: Create Researchers CRD
      action: roadiehq:utils:fs:write
      input:
        path: projects/${{ parameters.projectName | lower }}/researchers.yaml
        content: |
          apiVersion: karectl.io/v1alpha1
          kind: ResearchTeam
          metadata:
            name: ${{ parameters.projectName | lower }}-team
            namespace: karectl-system
            labels:
              karectl.io/project: ${{ parameters.projectName | lower }}
          spec:
            project: ${{ parameters.projectName | lower }}
            members:
              {% for researcher in parameters.researchers %}
              - username: {{ researcher.username }}
                role: {{ researcher.role }}
                accessLevel: {{ researcher.accessLevel }}
              {% endfor %}
            keycloak:
              groupName: ${{ parameters.projectName | lower }}
              scimEndpoint: ${{ parameters.dataClassification == 'restricted' and 'https://keycloak-restricted.karectl.local/scim' or 'https://keycloak.karectl.local/scim' }}

    - id: createNetworkPolicyCrd  
      name: Create Network Policy CRD
      action: roadiehq:utils:fs:write
      input:
        path: projects/${{ parameters.projectName | lower }}/network-policy.yaml
        content: |
          apiVersion: karectl.io/v1alpha1
          kind: ResearchNetworkPolicy
          metadata:
            name: ${{ parameters.projectName | lower }}-network
            namespace: karectl-system
            labels:
              karectl.io/project: ${{ parameters.projectName | lower }}
          spec:
            project: ${{ parameters.projectName | lower }}
            dataClassification: ${{ parameters.dataClassification }}
            isolation: ${{ parameters.networkIsolation }}
            
            ciliumPolicies:
              - name: ${{ parameters.projectName | lower }}-egress
                spec:
                  endpointSelector:
                    matchLabels:
                      karectl.io/project: ${{ parameters.projectName | lower }}
                  egress:
                    # Allow internal cluster communication
                    - toEntities:
                      - cluster
                    # Allow DNS
                    - toEndpoints:
                      - matchLabels:
                          k8s:io.kubernetes.pod.namespace: kube-system
                          k8s:app: kube-dns
                      toPorts:
                      - ports:
                        - port: "53"
                          protocol: UDP
                    # Project-specific external sites
                    {% for site in parameters.allowedExternalSites %}
                    - toFQDNs:
                      - matchName: {{ site.domain }}
                      toPorts:
                      {% for port in site.ports %}
                      - ports:
                        - port: "{{ port }}"
                          protocol: TCP
                      {% endfor %}
                    {% endfor %}

    - id: createCatalogInfo
      name: Create Backstage Catalog Info
      action: roadiehq:utils:fs:write
      input:
        path: projects/${{ parameters.projectName | lower }}/catalog-info.yaml
        content: |
          apiVersion: backstage.io/v1alpha1
          kind: System
          metadata:
            name: ${{ parameters.projectName | lower }}
            title: ${{ parameters.projectName }}
            description: ${{ parameters.description }}
            annotations:
              karectl.io/project-id: ${{ parameters.projectName | lower }}
              karectl.io/principal-investigator: ${{ parameters.principalInvestigator }}
              karectl.io/data-classification: ${{ parameters.dataClassification }}
              karectl.io/research-domain: ${{ parameters.researchDomain }}
              karectl.io/resource-tier: ${{ parameters.resourceTier }}
              karectl.io/network-isolation: ${{ parameters.networkIsolation }}
              argocd/app-name: ${{ parameters.projectName | lower }}
              grafana/dashboard-selector: karectl-project-${{ parameters.projectName | lower }}
            links:
              - url: https://jupyter.${{ parameters.projectName | lower }}.karectl.local
                title: JupyterHub
                icon: web
              - url: https://gitea.${{ parameters.projectName | lower }}.karectl.local
                title: Gitea Repository
                icon: web  
              - url: https://argocd.karectl.local/applications/${{ parameters.projectName | lower }}
                title: ArgoCD Application
                icon: web
          spec:
            type: research-project
            lifecycle: experimental
            owner: ${{ parameters.principalInvestigator }}
            domain: research-computing

    - id: createPr
      name: Create Pull Request
      action: publish:github:pull-request
      input:
        repoUrl: github.com?repo=karectl-projects&owner=karectl-crates
        branchName: project/${{ parameters.projectName | lower }}
        title: 'New Research Project: ${{ parameters.projectName }}'
        description: |
          ## New KARECTL Research Project Request
          
          **Project:** ${{ parameters.projectName }}
          **PI:** ${{ parameters.principalInvestigator }}
          **Data Classification:** ${{ parameters.dataClassification }}
          **Resource Tier:** ${{ parameters.resourceTier }}
          
          ### Project Details
          ${{ parameters.description }}
          
          ### Compliance Requirements
          {% for framework in parameters.complianceFrameworks %}
          - {{ framework }}
          {% endfor %}
          
          ### Services Requested
          **Compute:** {{ parameters.computeServices | join(', ') }}
          **Data:** {{ parameters.dataServices | join(', ') }}
          **Development:** {{ parameters.developmentServices | join(', ') }}
          **ML:** {{ parameters.mlServices | join(', ') }}
          
          ### Resource Requirements  
          - **Home Storage:** ${{ parameters.storageRequirements.homeStorage }}GB
          - **Data Storage:** ${{ parameters.storageRequirements.dataStorage }}GB
          - **Scratch Storage:** ${{ parameters.storageRequirements.scratchStorage }}GB
          
          ### Network Access
          **Isolation Level:** ${{ parameters.networkIsolation }}
          
          **External Sites:**
          {% for site in parameters.allowedExternalSites %}
          - {{ site.domain }} (ports: {{ site.ports | join(', ') }}) - {{ site.justification }}
          {% endfor %}
          
          ### Team Members
          {% for researcher in parameters.researchers %}
          - {{ researcher.username }} ({{ researcher.role }}, {{ researcher.accessLevel }})
          {% endfor %}
          
          ### Justification
          ${{ parameters.justification }}
          
          ---
          
          **Ethics Approval:** ${{ parameters.ethicsApprovalNumber }}
          **Duration:** ${{ parameters.projectDuration }} months
          **Auto-renewal:** ${{ parameters.autoRenewal }}
          
          Once approved and merged, ArgoCD will provision the workspace automatically.

    - id: register
      name: Register in Backstage Catalog
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['createPr'].output.repoContentsUrl }}
        catalogInfoPath: "/projects/${{ parameters.projectName | lower }}/catalog-info.yaml"

  output:
    links:
      - title: View Pull Request
        url: ${{ steps['createPr'].output.remoteUrl }}
      - title: View in Catalog
        entityRef: ${{ steps['register'].output.entityRef }}